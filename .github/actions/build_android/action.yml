name: Build APK
description: build for apk.

inputs:
  apkOrAab:
    description: apk or aab.
    required: true

outputs:
  binaryPath:
    description: APK path.
    value: ${{ steps.output-apk.outputs.path }}
  mappingPath:
    description: mapping.txt path.
    value: ${{ steps.output-mapping.outputs.path }}

runs:
  using: composite
  steps:
    - name: Build aab
      if: inputs.apkOrAab == 'aab'
      shell: bash
      run: flutter build appbundle --dart-define-from-file=dart_define.json
    - name: Build apk
      if: inputs.apkOrAab == 'apk'
      shell: bash
      run: flutter build apk --dart-define-from-file=dart_define.json
    - name: Output AAB
      id: output-aab
      if: inputs.apkOrAab == 'aab'
      shell: bash
      run: echo "path=./build/app/outputs/bundle/release/app-release.aab" >> $GITHUB_OUTPUT
    - name: Output APK
      id: output-apk
      if: inputs.apkOrAab == 'apk'
      shell: bash
      run: echo "path=./build/app/outputs/apk/release/app-release.apk" >> $GITHUB_OUTPUT
    - name: Output Mapping
      id: output-mapping
      shell: bash
      run: echo "path=./build/app/outputs/mapping/release/mapping.txt" >> $GITHUB_OUTPUT
