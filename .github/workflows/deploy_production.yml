name: Deploy Production

on:
  push:
    branches:
      - production

jobs:
  android:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Common
        uses: ./.github/actions/setup_common
        with:
          dartDefineJsonBase64: ${{ secrets.DART_DEFINE_JSON_BASE64 }}
          serviceAccountJsonBase64: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON_BASE64 }}
      - name: Setup Android
        uses: ./.github/actions/setup_android
        with:
          keystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          googleServicesJsonBase64: ${{ vars.GOOGLE_SERVICES_JSON_BASE64 }}
          serviceAccoutJsonBase64: ${{ secrets.GOOGLE_PLAY_ANDROID_DEVELOPER_SERVICE_ACCOUNT_JSON_BASE64 }}
      - name: Build
        id: build
        uses: ./.github/actions/build_android
        with:
          apkOrAab: apk
      - name: Upload
        uses: ./.github/actions/upload_firebase_app
        with:
          appId: ${{ vars.FIREBASE_APP_ID_ANDROID }}
          groups: ${{ vars.FIREBASE_APP_DISTRIBUTION_TESTER_GROUP }}
          binaryPath: ${{ steps.build.outputs.binaryPath }}
  ios:
    runs-on: macos-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Common
        uses: ./.github/actions/setup_common
        with:
          dartDefineJsonBase64: ${{ secrets.DART_DEFINE_JSON_BASE64 }}
          serviceAccountJsonBase64: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON_BASE64 }}
      - name: Setup iOS
        uses: ./.github/actions/setup_ios
        with:
          appleApiAuthkeyP8Base64: ${{ secrets.APPLE_API_AUTHKEY_P8_BASE64 }}
          googleServiceInfoPlistBase64: ${{ vars.GOOGLE_SERVICE_INFO_PLIST_BASE64 }}
          firebaseAppIdJsonBase64: ${{ vars.FIREBASE_APP_ID_FILE_JSON_BASE64 }}
          appleExportOptionsPlistBase64: ${{ vars.APPLE_EXPORT_OPTIONS_PLIST_ADHOC_BASE64 }}
      - name: Build
        id: build
        uses: ./.github/actions/build_ios
        with:
          appleApiIssuerId: ${{ vars.APPLE_API_ISSUER_ID }}
          appleApiKeyId: ${{ vars.APPLE_API_KEY_ID }}
      - name: Upload
        uses: ./.github/actions/upload_firebase_app
        with:
          appId: ${{ vars.FIREBASE_APP_ID_IOS }}
          groups: ${{ vars.FIREBASE_APP_DISTRIBUTION_TESTER_GROUP }}
          binaryPath: ${{ steps.build.outputs.binaryPath }}
#  web:
#    runs-on: ubuntu-latest
#    environment: production
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Setup Common
#        uses: ./.github/actions/setup_common
#        with:
#          dartDefineJsonBase64: ${{ secrets.DART_DEFINE_JSON_BASE64 }}
#          serviceAccountJsonBase64: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON_BASE64 }}
#      - name: Build
#        id: build
#        uses: ./.github/actions/build_web
#      - name: Upload
#        uses: ./.github/actions/upload_firebase_web
#        with:
#          projectId: ${{ vars.FIREBASE_PROJECT_ID }}
#          siteId: ${{ vars.FIREBASE_HOSTING_SITE_ID }}
